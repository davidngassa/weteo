{"version":3,"sources":["fonts/Inter-Regular.ttf","fonts/Inter-SemiBold.ttf","fonts/Inter-Bold.ttf","components/SearchBar.js","components/SearchSuggestion.js","components/LoadingAnimation.js","components/DayForecast.js","components/CityWeather.js","components/Article.js","utils/timeDifferenceCalculator.js","components/CityNews.js","pages/Home/HomePage.js","App.js","index.js"],"names":["module","exports","SearchBar","props","useState","isClearButtonVisible","setClearButtonVisibility","query","setQuery","className","Provider","value","color","size","title","id","autoComplete","spellCheck","placeholder","autoFocus","onChange","text","onChangeText","handleInputChange","target","onFocus","onClick","SearchSuggestion","name","country","url","onCitySelect","to","LoadingAnimation","defaultOptions","loop","autoplay","animationData","animation_data","options","height","DayForecast","weekdays","dayOfTheWeek","Date","getDay","index","length","Math","abs","weatherIcon","data","weather","icon","temperatures","temp","src","alt","round","max","min","CityWeather","current","currentWeatherIcon","forecast","daily","description","slice","map","day","i","key","Article","published_date","link","media","summary","rights","published_date_timestamp","getTime","currentDate_timestamp","rel","href","previous","elapsed","msPerMinute","msPerHour","msPerDay","timeDifference","CityNews","article","HomePage","content","searchResults","setSearchResults","selectedCityData","setselectedCityData","selectedCityName","setSelectedCityName","selectedCityCountry","setSelectedCityCountry","articles","setArticles","isResultsVisible","setResultsVisibility","isLoading","setIsLoading","getCityWeather","coordinates","a","fetch","lat","lon","process","response","json","responseJson","ok","Error","message","console","log","getNews","cityName","method","headers","responseData","handleCitySelect","countryCode","then","city","coord","Fragment","filterResult","citiesList","filter","toLowerCase","searchText","startsWith","Filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16400941.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Inter-Regular.56786aa1.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Inter-SemiBold.65cbb751.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Bold.c73899df.ttf\";","import React, { useState } from \"react\";\r\nimport { IoIosSearch } from \"react-icons/io\";\r\nimport { MdClear } from \"react-icons/md\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nimport \"./SearchBar.scss\";\r\n\r\nconst SearchBar = (props) => {\r\n  const [isClearButtonVisible, setClearButtonVisibility] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const clearInput = () => {\r\n    setQuery(\"\");\r\n    props.onChangeText(\"\");\r\n  };\r\n\r\n  const handleInputChange = (text) => {\r\n    setQuery(text);\r\n    props.onChangeText(text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search_bar\">\r\n      <IconContext.Provider\r\n        value={{\r\n          color: \"#9e9e9e \",\r\n          size: \"1.8em\",\r\n          className: \"search_icon\",\r\n          title: \"search_icon\",\r\n        }}\r\n      >\r\n        <IoIosSearch />\r\n      </IconContext.Provider>\r\n\r\n      <input\r\n        value={query}\r\n        id=\"search_input\"\r\n        autoComplete=\"off\"\r\n        spellCheck=\"false\"\r\n        placeholder=\"Search for a city\"\r\n        autoFocus\r\n        onChange={(text) => handleInputChange(text.target.value)}\r\n        onFocus={() => setClearButtonVisibility(true)}\r\n      ></input>\r\n\r\n      {isClearButtonVisible && (\r\n        <IconContext.Provider\r\n          value={{\r\n            color: \"#9e9e9e \",\r\n            size: \"1.8em\",\r\n            title: \"search_icon\",\r\n          }}\r\n        >\r\n          <button onClick={() => clearInput()} id=\"clear_button\">\r\n            <MdClear />\r\n          </button>\r\n        </IconContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nimport \"./SearchSuggestion.scss\";\r\n\r\nconst SearchSuggestion = (props) => {\r\n  const { id, name, country } = props;\r\n  const url = `/forecast/${id}`;\r\n\r\n  return (\r\n    <button onClick={props.onCitySelect} to={url} className=\"search_suggestion\">\r\n      {name} <span>{country}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SearchSuggestion;\r\n","import React from \"react\";\r\nimport Lottie from \"react-lottie\";\r\n\r\nimport animation_data from \"../lotties/loading_spinner.json\";\r\n\r\nconst LoadingAnimation = () => {\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animation_data,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Lottie options={defaultOptions} height={200} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingAnimation;\r\n","import React from \"react\";\r\n\r\nimport \"./DayForecast.scss\";\r\n\r\nconst DayForecast = (props) => {\r\n  let weekdays = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  const dayOfTheWeek =\r\n    new Date().getDay() + props.index >= weekdays.length\r\n      ? weekdays[Math.abs(new Date().getDay() + props.index - 7)]\r\n      : weekdays[new Date().getDay() + props.index];\r\n  const weatherIcon = props.data.weather[0].icon;\r\n  const temperatures = props.data.temp;\r\n\r\n  return (\r\n    <div className=\"day_forecast\">\r\n      <p>{dayOfTheWeek}</p>\r\n      <div>\r\n        <img\r\n          className=\"forecast_icon\"\r\n          src={`http://openweathermap.org/img/wn/${weatherIcon}@2x.png`}\r\n          alt=\"day_weather_icon\"\r\n        />\r\n        <div className=\"forecast_temp_container\">\r\n          <p className=\"forecast_temp_max\">{Math.round(temperatures.max)}</p>\r\n          <p className=\"forecast_temp_min\">{Math.round(temperatures.min)}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayForecast;\r\n","import React from \"react\";\r\n\r\nimport \"./CityWeather.scss\";\r\nimport DayForecast from \"./DayForecast\";\r\n\r\nconst CityWeather = (props) => {\r\n  const current = props.data.current;\r\n  const currentWeatherIcon = current.weather[0].icon;\r\n\r\n  const forecast = props.data.daily;\r\n\r\n  return (\r\n    <div className=\"city_weather\">\r\n      <div className=\"current_weather_container\">\r\n        <div className=\"current_weather_details\">\r\n          <p className=\"city_name\">\r\n            {props.name}, {props.country}\r\n          </p>\r\n          <div className=\"current_weather_description\">\r\n            <p>Currently</p>\r\n            <p className=\"current_weather_mood\">\r\n              {current.weather[0].description}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"current_weather_visual\">\r\n          <img\r\n            className=\"current_weather_icon\"\r\n            src={`http://openweathermap.org/img/wn/${currentWeatherIcon}@4x.png`}\r\n            alt=\"current_weather_icon\"\r\n          />\r\n          <p className=\"current_weather_temperature\">\r\n            {Math.round(current.temp)}°C\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"forecast_container\">\r\n        {forecast.slice(0, 5).map((day, i) => (\r\n          <DayForecast key={i} data={day} index={i} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CityWeather;\r\n","import React from \"react\";\r\n\r\nimport \"./Article.scss\";\r\n\r\nimport { timeDifference } from \"../utils/timeDifferenceCalculator\";\r\n\r\nexport default function Article(props) {\r\n  const { published_date, link, media, summary, title, rights } = props.data;\r\n\r\n  var published_date_timestamp = new Date(published_date).getTime();\r\n  var currentDate_timestamp = new Date().getTime();\r\n\r\n  return (\r\n    <a\r\n      rel=\"noopener noreferrer\"\r\n      target=\"_blank\"\r\n      href={link}\r\n      className=\"article\"\r\n    >\r\n      <div className=\"article_details\">\r\n        <p className=\"article_source\">{rights}</p>\r\n        <p className=\"article_title\">{title}</p>\r\n        <p className=\"article_summary\">{summary}</p>\r\n        <p className=\"article_date\">\r\n          {timeDifference(currentDate_timestamp, published_date_timestamp)}\r\n        </p>\r\n      </div>\r\n      <div className=\"article_image\">\r\n        {media && <img className=\"article_image\" src={media} alt={title} />}\r\n      </div>\r\n    </a>\r\n  );\r\n}\r\n","//Calculate approximate time past relative to current date\r\nexport const timeDifference = (current, previous) => {\r\n  var msPerMinute = 60 * 1000;\r\n  var msPerHour = msPerMinute * 60;\r\n  var msPerDay = msPerHour * 24;\r\n  var msPerMonth = msPerDay * 30;\r\n  var msPerYear = msPerDay * 365;\r\n\r\n  var elapsed = current - previous;\r\n\r\n  if (elapsed < msPerMinute) {\r\n    return Math.round(elapsed / 1000) + \" seconds ago\";\r\n  } else if (elapsed < msPerHour) {\r\n    return Math.round(elapsed / msPerMinute) + \" minutes ago\";\r\n  } else if (elapsed < msPerDay) {\r\n    return Math.round(elapsed / msPerHour) + \" hours ago\";\r\n  } else if (elapsed < msPerMonth) {\r\n    return Math.round(elapsed / msPerDay) + \" days ago\";\r\n  } else if (elapsed < msPerYear) {\r\n    return Math.round(elapsed / msPerMonth) + \" months ago\";\r\n  } else {\r\n    return Math.round(elapsed / msPerYear) + \" years ago\";\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./CityNews.scss\";\r\nimport Article from \"./Article\";\r\n\r\nexport default function CityNews(props) {\r\n  return (\r\n    <div className=\"city_news\">\r\n      {props.data ? (\r\n        props.data.map((article, i) => <Article key={i} data={article} />)\r\n      ) : (\r\n        <p className=\"empty_state_message\">\r\n          No news at the moment. Try again later\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./HomePage.scss\";\r\nimport citiesList from \"../../data/cities.json\";\r\n\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport SearchSuggestion from \"../../components/SearchSuggestion\";\r\nimport LoadingAnimation from \"../../components/LoadingAnimation\";\r\nimport CityWeather from \"../../components/CityWeather\";\r\nimport CityNews from \"../../components/CityNews\";\r\n\r\nconst WEATHER_API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\r\nconst NEWS_API_KEY = process.env.REACT_APP_NEWS_API_KEY;\r\n\r\nconst HomePage = () => {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [selectedCityData, setselectedCityData] = useState();\r\n  const [selectedCityName, setSelectedCityName] = useState(\"\");\r\n  const [selectedCityCountry, setSelectedCityCountry] = useState(\"\");\r\n  const [articles, setArticles] = useState([]);\r\n  const [isResultsVisible, setResultsVisibility] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Filter through the list of cities to search result\r\n  const Filter = (text) => {\r\n    setResultsVisibility(true);\r\n    if (text !== \"\") {\r\n      const filterResult = citiesList\r\n        .filter((city) => {\r\n          const cityName = city.name.toLowerCase();\r\n          const searchText = text.toLowerCase();\r\n\r\n          return cityName.startsWith(searchText);\r\n        })\r\n        .slice(0, 5);\r\n\r\n      setSearchResults(filterResult);\r\n    } else {\r\n      setSearchResults([]);\r\n    }\r\n  };\r\n\r\n  const getCityWeather = async (coordinates, name, country) => {\r\n    setResultsVisibility(false);\r\n    setSelectedCityName(name);\r\n    setSelectedCityCountry(country);\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${coordinates.lat}&lon=${coordinates.lon}&exclude=hourly,minutely&appid=${WEATHER_API_KEY}&units=metric`\r\n      );\r\n\r\n      const responseJson = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(responseJson.message); // Throw error if request not succesful\r\n      } else {\r\n        setselectedCityData(responseJson);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getNews = async (cityName) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://newscatcher.p.rapidapi.com/v1/search?media=True&sort_by=date&topic=news&lang=en&page=1&q=${cityName}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-rapidapi-host\": \"newscatcher.p.rapidapi.com\",\r\n            \"x-rapidapi-key\": `${NEWS_API_KEY}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      const responseData = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      } else {\r\n        setArticles(responseData.articles);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleCitySelect = async (coordinates, name, countryCode) => {\r\n    setIsLoading(true);\r\n    getCityWeather(coordinates, name, countryCode).then(() => getNews(name));\r\n  };\r\n\r\n  let content;\r\n\r\n  if (isLoading) {\r\n    content = (\r\n      <div className=\"animation_container\">\r\n        <LoadingAnimation />\r\n      </div>\r\n    );\r\n  } else {\r\n    if (isResultsVisible) {\r\n      content = (\r\n        <div className=\"search_results\">\r\n          {searchResults.length > 0 &&\r\n            searchResults.map((city, i) => (\r\n              <SearchSuggestion\r\n                key={i}\r\n                id={city.id}\r\n                name={city.name}\r\n                country={city.country}\r\n                onCitySelect={() =>\r\n                  handleCitySelect(city.coord, city.name, city.country)\r\n                }\r\n              />\r\n            ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      content = (\r\n        <React.Fragment>\r\n          <CityWeather\r\n            data={selectedCityData}\r\n            name={selectedCityName}\r\n            country={selectedCityCountry}\r\n          />\r\n          <CityNews data={articles} />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <SearchBar onChangeText={(text) => Filter(text)} />\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nimport \"./App.scss\";\r\n\r\nimport HomePage from \"./pages/Home/HomePage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <HomePage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nimport \"./fonts/Inter-Regular.ttf\";\nimport \"./fonts/Inter-SemiBold.ttf\";\nimport \"./fonts/Inter-Bold.ttf\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}