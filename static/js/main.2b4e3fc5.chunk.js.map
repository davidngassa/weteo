{"version":3,"sources":["fonts/Inter-Regular.ttf","fonts/Inter-SemiBold.ttf","fonts/Inter-Bold.ttf","components/Footer.js","components/SearchBar.js","components/SearchSuggestion.js","components/DayForecast.js","components/CityWeather.js","components/LoadingAnimation.js","pages/Home/HomePage.js","App.js","index.js"],"names":["module","exports","Footer","className","SearchBar","props","useState","isClearButtonVisible","setClearButtonVisibility","query","setQuery","Provider","value","color","size","title","id","autoComplete","spellCheck","placeholder","autoFocus","onChange","text","onChangeText","handleInputChange","target","onFocus","onClick","SearchSuggestion","name","country","url","onCitySelect","to","DayForecast","weekdays","dayOfTheWeek","Date","getDay","index","length","Math","abs","weatherIcon","data","weather","icon","temperatures","temp","src","alt","round","max","min","CityWeather","console","log","current","currentWeatherIcon","forecast","daily","description","slice","map","day","i","key","LoadingAnimation","defaultOptions","loop","autoplay","animationData","animation_data","options","height","HomePage","content","searchResults","setSearchResults","selectedCityData","setselectedCityData","selectedCityName","setSelectedCityName","selectedCityCountry","setSelectedCityCountry","isResultsVisible","setResultsVisibility","isLoading","setIsLoading","getCityWeather","coordinates","a","fetch","lat","lon","process","response","json","responseJson","ok","Error","message","city","coord","filterResult","citiesList","filter","cityName","toLowerCase","searchText","startsWith","Filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b4e3fc5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Inter-Regular.56786aa1.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Inter-SemiBold.65cbb751.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Bold.c73899df.ttf\";","import React from \"react\";\r\n\r\nimport \"./Footer.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p>\r\n        by <span>David Ngassa</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport { IoIosSearch } from \"react-icons/io\";\r\nimport { MdClear } from \"react-icons/md\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nimport \"./SearchBar.scss\";\r\n\r\nconst SearchBar = (props) => {\r\n  const [isClearButtonVisible, setClearButtonVisibility] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const clearInput = () => {\r\n    setQuery(\"\");\r\n    props.onChangeText(\"\");\r\n  };\r\n\r\n  const handleInputChange = (text) => {\r\n    setQuery(text);\r\n    props.onChangeText(text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search_bar\">\r\n      <IconContext.Provider\r\n        value={{\r\n          color: \"#9e9e9e \",\r\n          size: \"1.8em\",\r\n          className: \"search_icon\",\r\n          title: \"search_icon\",\r\n        }}\r\n      >\r\n        <IoIosSearch />\r\n      </IconContext.Provider>\r\n\r\n      <input\r\n        value={query}\r\n        id=\"search_input\"\r\n        autoComplete=\"off\"\r\n        spellCheck=\"false\"\r\n        placeholder=\"Search for a city\"\r\n        autoFocus\r\n        onChange={(text) => handleInputChange(text.target.value)}\r\n        onFocus={() => setClearButtonVisibility(true)}\r\n      ></input>\r\n\r\n      {isClearButtonVisible && (\r\n        <IconContext.Provider\r\n          value={{\r\n            color: \"#9e9e9e \",\r\n            size: \"1.8em\",\r\n            title: \"search_icon\",\r\n          }}\r\n        >\r\n          <button onClick={() => clearInput()} id=\"clear_button\">\r\n            <MdClear />\r\n          </button>\r\n        </IconContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nimport \"./SearchSuggestion.scss\";\r\n\r\nconst SearchSuggestion = (props) => {\r\n  const { id, name, country } = props;\r\n  const url = `/forecast/${id}`;\r\n\r\n  return (\r\n    <button onClick={props.onCitySelect} to={url} className=\"search_suggestion\">\r\n      {name} <span>{country}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SearchSuggestion;\r\n","import React from \"react\";\r\n\r\nimport \"./DayForecast.scss\";\r\n\r\nconst DayForecast = (props) => {\r\n  let weekdays = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  const dayOfTheWeek =\r\n    new Date().getDay() + props.index >= weekdays.length\r\n      ? weekdays[Math.abs(new Date().getDay() + props.index - 7)]\r\n      : weekdays[new Date().getDay() + props.index];\r\n  const weatherIcon = props.data.weather[0].icon;\r\n  const temperatures = props.data.temp;\r\n\r\n  return (\r\n    <div className=\"day_forecast\">\r\n      <p>{dayOfTheWeek}</p>\r\n      <div>\r\n        <img\r\n          className=\"forecast_icon\"\r\n          src={`http://openweathermap.org/img/wn/${weatherIcon}@2x.png`}\r\n          alt=\"day_weather_icon\"\r\n        />\r\n        <div className=\"forecast_temp_container\">\r\n          <p className=\"forecast_temp_max\">{Math.round(temperatures.max)}</p>\r\n          <p className=\"forecast_temp_min\">{Math.round(temperatures.min)}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayForecast;\r\n","import React from \"react\";\r\n\r\nimport \"./CityWeather.scss\";\r\nimport DayForecast from \"./DayForecast\";\r\n\r\nconst CityWeather = (props) => {\r\n  console.log(props.data);\r\n\r\n  const current = props.data.current;\r\n  const currentWeatherIcon = current.weather[0].icon;\r\n\r\n  const forecast = props.data.daily;\r\n\r\n  return (\r\n    <div className=\"city_weather\">\r\n      <div className=\"current_weather_container\">\r\n        <div className=\"current_weather_details\">\r\n          <p className=\"city_name\">\r\n            {props.name}, {props.country}\r\n          </p>\r\n          <div className=\"current_weather_description\">\r\n            <p>Currently</p>\r\n            <p className=\"current_weather_mood\">\r\n              {current.weather[0].description}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"current_weather_visual\">\r\n          <img\r\n            className=\"current_weather_icon\"\r\n            src={`http://openweathermap.org/img/wn/${currentWeatherIcon}@4x.png`}\r\n            alt=\"current_weather_icon\"\r\n          />\r\n          <p className=\"current_weather_temperature\">\r\n            {Math.round(current.temp)}°C\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"forecast_container\">\r\n        {forecast.slice(0, 5).map((day, i) => (\r\n          <DayForecast key={i} data={day} index={i} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CityWeather;\r\n","import React from \"react\";\r\nimport Lottie from \"react-lottie\";\r\n\r\nimport animation_data from \"../lotties/loading_spinner.json\";\r\n\r\nconst LoadingAnimation = () => {\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animation_data,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Lottie options={defaultOptions} height={200} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingAnimation;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./HomePage.scss\";\r\nimport citiesList from \"../../data/cities.json\";\r\n\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport SearchSuggestion from \"../../components/SearchSuggestion\";\r\nimport CityWeather from \"../../components/CityWeather\";\r\nimport LoadingAnimation from \"../../components/LoadingAnimation\";\r\n\r\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\r\n\r\nconst HomePage = () => {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [selectedCityData, setselectedCityData] = useState();\r\n  const [selectedCityName, setSelectedCityName] = useState(\"\");\r\n  const [selectedCityCountry, setSelectedCityCountry] = useState(\"\");\r\n  const [isResultsVisible, setResultsVisibility] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Filter through the list of cities to search result\r\n  const Filter = (text) => {\r\n    setResultsVisibility(true);\r\n    if (text !== \"\") {\r\n      const filterResult = citiesList\r\n        .filter((city) => {\r\n          const cityName = city.name.toLowerCase();\r\n          const searchText = text.toLowerCase();\r\n\r\n          return cityName.startsWith(searchText);\r\n        })\r\n        .slice(0, 5);\r\n\r\n      setSearchResults(filterResult);\r\n    } else {\r\n      setSearchResults([]);\r\n    }\r\n  };\r\n\r\n  const getCityWeather = async (coordinates, name, country) => {\r\n    setResultsVisibility(false);\r\n    setIsLoading(true);\r\n    setSelectedCityName(name);\r\n    setSelectedCityCountry(country);\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${coordinates.lat}&lon=${coordinates.lon}&exclude=hourly,minutely&appid=${API_KEY}&units=metric`\r\n      );\r\n\r\n      const responseJson = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(responseJson.message); // Throw error if request not succesful\r\n      } else {\r\n        setselectedCityData(responseJson);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  let content;\r\n\r\n  if (isLoading) {\r\n    content = (\r\n      <div className=\"animation_container\">\r\n        <LoadingAnimation />\r\n      </div>\r\n    );\r\n  } else {\r\n    if (isResultsVisible) {\r\n      content = (\r\n        <div className=\"search_results\">\r\n          {searchResults.length > 0 &&\r\n            searchResults.map((city, i) => (\r\n              <SearchSuggestion\r\n                key={i}\r\n                id={city.id}\r\n                name={city.name}\r\n                country={city.country}\r\n                onCitySelect={() =>\r\n                  getCityWeather(city.coord, city.name, city.country)\r\n                }\r\n              />\r\n            ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      content = (\r\n        <CityWeather\r\n          data={selectedCityData}\r\n          name={selectedCityName}\r\n          country={selectedCityCountry}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <SearchBar onChangeText={(text) => Filter(text)} />\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nimport \"./App.scss\";\r\nimport Footer from \"./components/Footer\";\r\nimport HomePage from \"./pages/Home/HomePage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <HomePage />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nimport \"./fonts/Inter-Regular.ttf\";\nimport \"./fonts/Inter-SemiBold.ttf\";\nimport \"./fonts/Inter-Bold.ttf\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}